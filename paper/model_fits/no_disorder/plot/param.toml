tag_names = ["path", "loss"]

[dataframes.__matrix__]
path = { __call__ = ["niarb.io", "iterdir"], path = "fits", pattern = "*.pt", indices = { __indices__ = { __environ__ = "INDICES" }  } }

[[dataframes.__include__]]
loss = { __eval__ = "float(path.stem)" }
func = ["niarb.dataframe", "from_state_dict"]
dims = { gW = ["Postsynaptic", "Presynaptic"], sigma = ["Postsynaptic", "Presynaptic"], kappa = ["Postsynaptic", "Presynaptic"] }
coords = { gW = [["PYR", "PV"], ["PYR", "PV"]], sigma = [["PYR", "PV"], ["PYR", "PV"]], kappa = [["PYR", "PV"], ["PYR", "PV"]] }
state_dict = { __call__ = ["torch", "load"], f = { __eval__ = "path" }, map_location = "cpu" }

[plots.__matrix__]
name = ["gW", "sigma", "kappa"]

[[plots.__include__]]
func = "catplot"
kind = "bar"
y = "value"
height = 2
col = "loss"
col_wrap = 5

[[plots.__include__]]
name = "gW"
query = "variable == 'gW'"
x = "Presynaptic"
hue = "Postsynaptic"
mapping = { value = "Connectivity strength" }

[[plots.__include__]]
name = "sigma"
query = "variable == 'sigma'"
x = "Presynaptic"
hue = "Postsynaptic"
mapping = { value = 'Connectivity width ($\mu$m)' }

[[plots.__include__]]
name = "kappa"
query = "variable == 'kappa'"
x = "Presynaptic"
hue = "Postsynaptic"
mapping = { value = 'Tuning index ($\kappa$)' }

